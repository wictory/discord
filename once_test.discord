#
#  Discord Sequence File
#
#  This file will run with discord 2.0.0 and above.
#
#  Anything after two hash marks (#) will be printed to stderr, if you want to watch parse progress
#
#  OPTIONS
#
#  -a, --audio_device
#
#    Specify the audio device to use for playback in alsa plug format.
#    Discord will automatically create a plughw alsa plugin from the
#    default audio device if this is not specified.  Discord uses alsa to
#    do format conversion from internal program representation to what the
#    card requires, but locks the sample rates to be only those supported
#    by the card hardware.  This prevents resampling with consequent
#    distortion and slowdown.  If you try to use a direct hardware link
#    like "hw:0,0" here it will cause a segmentation fault.  To implement
#    direct hardware writing discord would have to incorporate all of the
#    format conversion.  This seems counterproductive.  The first number is
#    the card number, the second is the device number, both starting at 0.
#    See the alsa documentation at www.alsa-project.org for a fuller
#    explanation.  Default is plughw:0,0.
#    
#    Examples
#      --audio_device=plughw:0,0  
#      -a plughw:0,2
#
#  -b, --bit_accuracy
#
#    bit accuracy of sound generated, 16i, 24i, 32i, 32f, 64f, i=int and
#    f=float.  Only applies if you are sending to a file.  Default is
#    16i.
#    
#    Examples
#      --bit_accuracy=16i
#      -b 24i
#
#  -c, --compensate
#
#    compensate for human hearing, low and high freqs need to be
#    louder, max 32 adjustment points are allowed.  The compensation
#    points can all be on the same line or on multiple lines, but each
#    line must start with the option name.  If this is correct, a sound
#    at the compensated frequency sounds the same loudness as any other
#    sound at its compensated frequency.  i.e. It linearizes the range.
#    This is individual, depends on your hearing, so the above is only
#    a starting point for you to play with and tweak.  For most people,
#    sounds from about 800 Hz to 4000 Hz are the loudest and about
#    equivalent.  Hearing falls off at either end so that the amplitude
#    has to be higher in order for the sound to have the same loudness
#    to the ear.  There is dispute about whether sounds outside the
#    range of hearing have any effect.  If you use compensation, set
#    all amplitudes to a constant value for binaural, chronaural, bell,
#    and noise.  Or whatever ratio between the loudness you want them
#    to have, as if linear.  The stoch, sample, repeat, and once voices
#    are not compensated so should be set at the amplitude you want.
#    Default is no compensation.
#
#    Examples  (see also the test script files)
#      --compensate=5=9'''3000=1'''',13000=3,,,,20000=11.0
#      -c 5=10'''2530=1''',13128=3.5,,,,20000=10.0
-c 5=7
-c 10=5.2
-c 20=4.6
-c 30=3.4
-c 40=2.4
-c 50=1.6
-c 60=1.4
-c 80=1.3
-c 100=1.2
-c 200=1.2
-c 300=1.2
-c 400:1.1
-c 500:1
-c 600:1
-c 700=1
-c 800=1
-c 900=1
-c 1000=1
-c 2000=1
-c 3000=1
-c 5000=1
-c 7000=1.1
-c 9000:1.3
-c 10000:1.4
-c 12000:1.6
-c 13000=2
-c 16000=3
-c 17000=3.5
-c 18000=4
-c 19000=4.5
-c 20000=5
#
#  -d, --display_only
#
#    display only, don't actually play any sequences.  Default is play.
#
#  -e, --every
#
#    display status every x seconds, decimal value > 0.  If you use
#    values that are too small here, you will get a lot of underruns.
#    Small values are probably best by redirecting output to a file for
#    future analysis.  e.g. discord test.discord > save.output 2>&1
#    Make sure you also write the sound to a file using -b, -o, -w.
#    Default is 5 seconds.
#
#    Examples
#      --every=10   
#      -e 5.391
-e 10
#
#  -f, --fast
#
#    fast, move through at multiple of time, 60 ==> 1min becomes 1 sec
#    so a 1 hour play sequence will play in 1 minute.  Good for
#    testing a new sequence for correctness, though obviously the
#    effect won't be the same.  Bell has been tweaked so that the pitch
#    doesn't change while using this.  Default is 1.
#
#    Examples
#      --fast=60
#      -f 10
#
#  -h, --help
#
#    display short help list for options
#
#  -k, --keep
#
#    keep any files generated by resampling.  Default is to delete the
#    files when they are no longer needed.
#
#  -m, --modify
#
#    specify that every carrier and beat for binaural, chronaural,
#    pulse, phase, and fm voices will be modified from the value in the
#    input script.  The value is the percent band within which the
#    random modification will occur, half above the input value, and
#    half below.  For a carrier of 200 with a modification of 2 per
#    cent, the modified value will be a random value between 198 and
#    202.  For a beat of 4 with a modification of 1 per cent, the
#    modified value will be a random value between 3.98 and 4.02.  The
#    maximum modification is less than 200, which means a possible
#    value somewhere between almost zero and twice the input.  This is
#    a fast way to modify a script without editing.  Default is no
#    modification.
#    
#    Examples 
#      --modify=2 
#      -m 0.5
#
#  -o, --out_format
#
#    output file format, w:wav, f:flac, r:raw.  Default is wav.
#
#    Examples
#      --out_format=w
#      -o w
#
#  -q, --quiet
#
#    quiet, don't display status or any other output while running.
#    Default is to display status every 5 seconds.
#
#  -r, --rate
#
#    frame rate per second, whatever your card can do, 44100 is CD
#    quality.  Higher rates might be beneficial on binaurals at high
#    frequencies, say 15000 Hz and above, or very low beats, < 0.1.
#    For normal frequencies, 44100 will be just fine.  Note that higher
#    rates won't do any harm, they will just make the cpu and sound
#    card work harder.  From Nyquist theory, the sample rate has to be
#    greater than equal to twice the highest frequency in the sound
#    being played in order to reproduce it exactly.  Since human
#    hearing theoretically maxes out for most people at 20 kHz and cd
#    quality at 44100 frames/second allows up to 22 kHz perfect
#    reproduction, this isn't really a problem.  While discord is only
#    pretending to sample and doesn't exactly meet the criteria, it
#    should be within small tolerances of perfect.  I think the place
#    where any change might be noticeable is dynamics.  If your sound
#    card does internal processing in 16 bit integers, that allows a
#    variation of 32,767 gradations of amplitude.  You will lose a
#    slight amount of exactness from the doubles that discord uses
#    internally.  If your card uses 24 bit or 32 bit internally, any
#    change from conversion will be unnoticeable.  Whatever the rate
#    you select here, discord will use the closest hardware supported
#    rate to prevent any resampling, a major source of distortion, far
#    greater than effects from sample rate or bit representation of
#    amplitude unless you are using a sample rate of 22 kHz or less or
#    an 8 bit sound card.  Default is 44100.
#    
#    Examples 
#      --rate=44100 
#      -r 96000
-r 44100
#
#  -t, --thread
#
#    use nonblocking thread to play sound instead of a blocking
#    function call.  This allows more throughput, but because the
#    thread runs with user priority, during heavy cpu usage it can
#    result in breaks in the sound while other tasks block it.  The
#    blocking function call is more robust in this situation.  Under
#    light usage, either is fine.  This only affects threading for
#    playing sound or writing sound to a file.  Default is no
#    threading.
#
#  -v, --verbose
#
#    when writing a status line while playing, use the detailed format
#    instead of the summary format that is the default. 
#
#  -w, --write
#
#    write to this file instead of the default, playing via sound
#    card 0.  You can use this without setting the -b/--bit_rate and
#    -o/--out_format variables, but you will then get the default of 16
#    bit and wav format.
#
#    Examples
#      --write=/home/xkdi/mindbending.flac
#      -w  /home/xkdi/mindblowing.wav
#
#  A time sequence may span multiple lines, but a voice (binaural, bell, noise, etc.)
#  cannot be split across lines.
#
#  Time Sequences
#
#  Separators allowed are | , ; ' =, multiples are allowed mixed with singles, any combination
#  of separators even within a voice.
#  However, every voice must be joined by separators.  No white space is allowed.
#  The < or > after the duration/time is a fade in <, or fade out > for that time sequence.
#  The > after a binaural or chronaural voice is a slide, and will adjust to be the next binaural or chronaural at the
#  end of the time period.
#  The & with number of steps, slide time, and fuzz is a step slide, and will adjust to be the 
#  next binaural or chronaural at the end of the time period in a sequence of descending steps.
#  The ~ with number of steps and slide time is a vary slide, and will adjust to be the 
#  next binaural or chronaural at the end of the time period in a sequence of random steps.
#  All amplitudes are in percentages, 0 is none, 100 is max.
#  All splits are expressed as fraction for Left channel.  e.g. .3 means .3 left channel, .7 right channel
#  All durations in voices are expressed as seconds.  e.g. .3 = .3 second, 20 = 20 seconds, 1200 = 20 minutes
#  For any fields with a minimum and maximum range, setting them the same makes it a constant value.  Any time 
#    they are different, a random selection in the range will be made.
#
#  Fields for binaural are name, carrier frequency, beat frequency, amplitude.
#    Optional fields are a left and right amplitude frequency variation and a left and right percentage to vary.
#    Must be at the end, before the slide indicator if they are present.
#    The + or - on the beat frequency indicates whether the left ear is higher + or lower -.
#    The beat is centered on the carrier frequency, so 200  +4 results in L 202 and R 198.
#    Slide indicator must be present for a slide to occur, can be continuous slide ">", step slide "&",
#    or vary slide "~".  Step slide must have number of steps, slide time, and fuzz after it.  Vary slide must
#    have number of steps and slide time after it.
#
#  Fields for bell are name, frequency, minimum start amplitude, maximum start amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed, minimum time allowed to ring, maximum time allowed to ring,
#    minimum time till next ring, maximum time till next ring, and decay pattern for the ring, 1 through 5.
#    1 decrease linearly to 0
#    2 decrease linearly to .5, 
#    3 constant,
#    4 increase linearly to 1.1
#    5 decrease quadratically to 0  (this is the most natural sounding)
#    The minimum and maximum time till next play are relative to the beginning of the last play. i.e. unlike noise,
#      bell will interrupt itself.  The bell can start ringing again before the current ring has finished.  
#      It displaces the currently ringing bell.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#
#  Fields for noise are name, minimum start frequency, maximum start frequency, minimum start amplitude, 
#    maximum start amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed, minimum time allowed to play, maximum time allowed to play,
#    minimum time till next play, maximum time till next play, minimum decay pattern for the play, 1 through 5.
#    maximum decay pattern for the play, 1 through 5, and the number of repeats.
#    1 decrease linearly to 0
#    2 decrease linearly to .5, 
#    3 constant,
#    4 increase linearly to 1.1
#    5 decrease linearly  to 1.25
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#    Minimum decay has to be less than maximum decay or unpredicable behavior results.
#    The minimum and maximum time till next play are relative to the end of the last play. i.e. unlike bell,
#      noise will never interrupt itself.  The next voice in a slot will never start playing until after the 
#      current voice has finished.
#    If there is no repeat on the end, 1 is the default.
#
#  Fields for stoch are name, file name, minimum amplitude, maximum amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed, minimum time till next play, maximum time till next play.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#
#  Fields for sample are name, file name, minimum amplitude, maximum amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed, and length of the sample (constant in seconds).
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#
#  Fields for repeat are name, file name, minimum amplitude, maximum amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#
#  Fields for once are name, file name, minimum amplitude, maximum amplitude, beginning split, ending split,
#    lowest split allowed, highest split allowed, when to play.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#
#  Fields for chronaural are name, carrier, beat, amplitude, phase, sin threshold, beat behave, 
#    beginning split, ending split, lowest split allowed, highest split allowed, split beat, and slide.
#    Beat is the frequency through time of the carrier tone.
#    Phase is the degrees that the right channel is leading the left channel, between 0 and 360.
#    Sin threshold is the value the sin function has to have before the tone is played.
#    Beat amplitude behavior is below.
#      1 sin wave  tone is adjusted by sin value
#      2 square wave  tone is either on or off
#      3 dirac delta approximation, 5th power of sin
#      4 extreme dirac delta approximation, 15th power of sin
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#    Split beat is the frequency through time of the oscillation of the left and right split.
#    Slide indicator must be present for a slide to occur, can be continuous slide ">", step slide "&",
#    or vary slide "~".  Step slide must have number of steps, slide time, and fuzz after it.  Vary slide must
#    have number of steps and slide time after it.
#
#  Fields for pulse are name, carrier, pulse beat, amplitude, phase, phase, pulse time,
#    beginning split, ending split, lowest split allowed, highest split allowed, split beat, and slide.
#    Pulse beat is the frequency through time of the carrier tone.
#    Phase is the degrees that the right channel is leading the left channel, between 0 and 360.
#    Phase is the degrees that the right channel is leading the left channel, between 0 and 360.
#    Pulse time is the length in seconds that the carrier should play for a pulse.  There is a 1 ms fade out
#      so it should be longer than that.  If it is longer than 1/pulse beat it will play continuously.  It is
#      a simple on-off tone, square wave.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#    Split beat is the frequency through time of the oscillation of the left and right split.
#    Slide indicator must be present for a slide to occur, can be continuous slide ">", step slide "&",
#    or vary slide "~".  Step slide must have number of steps, slide time, and fuzz after it.  Vary slide must
#    have number of steps and slide time after it.
#
#  Fields for phase are name, carrier frequency, beat frequency, amplitude, phase,
#    beginning split, ending split, lowest split allowed, highest split allowed, and split beat.
#    Optional fields are a left and right amplitude beat frequency and a left and right percentage to vary.
#    Must be at the end, before the slide indicator if they are present.
#    Beat frequency is the number of times per second that the phase shifts between 0 and the current phase.
#    Phase is the phase difference in degrees between the base tone and the beat, from 0 to any reasonable 
#    positive number. 360 indicates a doubling of the base frequency at the limit. 
#    Slide indicator must be present for a slide to occur, can be continuous slide ">", step slide "&",
#    or vary slide "~".  Step slide must have number of steps, slide time, and fuzz after it.  Vary slide must
#    have number of steps and slide time after it.
#
#  Fields for fm are name, carrier frequency, beat frequency, amplitude, frequency band, phase,
#    beginning split, ending split, lowest split allowed, highest split allowed, and split beat.
#    Optional fields are a left and right amplitude frequency variation and a left and right percentage to vary.
#    Must be at the end, before the slide indicator if they are present.
#    Beat frequency is the number of times per second that the carrier frequency shifts between carrier and 
#      carrier plus band.
#    Band is the frequency that gets added to the carrier to make the maximum frequency to cycle to for the beat.
#    Phase is the phase difference in degrees between the left and right channel, from -360 to 360.  
#    If phase is +ve, it is the amount the right channel leads the left.
#    If phase is -ve, it is the amount the left channel leads the right.
#    If beginning split or ending split are -1, they are set randomly between lowest split and highest split.
#    Split beat is the frequency through time of the oscillation of the begin and end split.
#    Slide indicator must be present for a slide to occur, can be continuous slide ">", step slide "&",
#    or vary slide "~".  Step slide must have number of steps, slide time, and fuzz after it.  Vary slide must
#    have number of steps and slide time after it.
#
#  This is a test run file for discord, testing repeat.
#
# Fade in
#
00:00:10''''<  
  once''''pine_tree_cricket.aiff''''1.5993''''2.7856''''-1''''-1''''.050''''.950''''5
#
# Play constant
#
00:00:10  
  once''''pine_tree_cricket.aiff''''1.5993''''2.7856''''-1''''-1''''.050''''.950''''5
#
# Fade out
#
00:00:10''''>  
  once''''pine_tree_cricket.aiff''''1.5993''''2.7856''''-1''''-1''''.050''''.950''''5
