DESCRIPTION

In alsa-lib-1.0.14 final version, all of the floating point formats were
disabled.  Because discord uses doubles for internal processing and passes
doubles to alsa-lib for conversion to the sound card's native internal format,
it cannot work with alsa-lib-1.0.14.  The latest development version of
alsa-lib fixes this problem.  Here is a step by step description of how to
install the latest version of alsa-lib without breaking your package
management system's automatic update capability.

NOTE:  Some parts of these instruction require that you become the superuser,
root.  You can, of course, follow the directions in the INSTALL file from
alsa-lib to create a static library and link against it without being root.  I
won't be covering that option here, though.

I have put the commands on a line by themselves to avoid delimiters.

WORKAROUND PROCESS 

1.  Go to ftp://ftp.suse.com/pub/projects/alsa/snapshot/lib/ and download the
file alsa-lib-hg20070714.tar.bz2.  This is the version I tested with, so I
know it works.  If you feel adventurous, you can try the latest file.  Right
now, alsa-lib-hg20070714.tar.bz2 is the latest file.

2.  Run the command
tar -jxvf alsa-lib-hg20070714.tar.bz2  
This will create a directory named alsa-lib-hg20070714.  

3.  Go into the directory.  
cd alsa-lib-hg20070714

4.  Type command
./configure

5.  Type command
make
If make fails with python errors, check that there is a directory python
under /usr/include.  If there is only a directory like python2.5, as on
Fedora 7, make a symbolic link so the make file can find the python
headers.  You will need to be root to do this.
cd /usr/include
ls -d python*
ln -s python2.5 python

6.  From this point on you have to be root as you are altering system
files.  As root, go into the directory alsa-lib-hg20070714/src/.libs/.
Copy the file libasound.so.2.0.0 to /usr/local/lib.  
cd src/.libs
cp libasound.so.2.0.0 /usr/local/lib/

7.  Change to the /usr/local/lib directory.
cd /usr/local/lib

8.  Make a new alsa subdirectory.  This is necessary to avoid activating
other libraries in /usr/local/lib.
mkdir alsa

9.  Move the new library there.
mv libasound.so.2.0.0 alsa/

10.  Change to the alsa directory
cd alsa

11.  Check that the library is there.
ls -l libasound*
-rwxr-xr-x 1 root root 2786874 2007-08-06 08:24 libasound.so.2.0.0

12.  Create a new symbolic link to the shared library you just moved.
ln -s libasound.so.2.0.0 libasound.so.2

10.  Check that the link is there.
ls -l libasound*
lrwxrwxrwx 1 root root      18 2007-08-06 08:28 libasound.so.2 -> libasound.so.2.0.0
-rwxr-xr-x 1 root root 2786874 2007-08-06 08:24 libasound.so.2.0.0

11.  Change to the /usr/lib directory.
cd /usr/lib

12.  Find the setup for the libasound library.
ls -l libasound*
-rw-r--r-- 1 root root 1458654 2007-08-01 01:45 libasound.a
lrwxrwxrwx 1 root root      29 2007-08-06 08:31 libasound.so -> /lib/libasound.so.2

13.  Remove the current link to the package library in /lib.
rm libasound.so

14.  Check that it is gone.
ls -l libasound*
-rw-r--r-- 1 root root 1458654 2007-08-01 01:45 libasound.a

15.  Create a new symbolic link here to the symbolic link you created in /usr/local/lib/alsa.
ln -s /usr/local/lib/alsa/libasound.so.2 libasound.so

16.  Check that the link was created.
ls -l libasound*
-rw-r--r-- 1 root root 1458654 2007-08-01 01:45 libasound.a
lrwxrwxrwx 1 root root      29 2007-08-06 08:31 libasound.so -> /usr/local/lib/alsa/libasound.so.2

17.  Change to the /etc/ld.so.conf.d directory.
cd /etc/ld.so.conf.d

18.  Use a text editor to create a file called alsa.conf.  I use vim with the
following commands.
vim alsa.conf
i to put it into insert mode
Type  /usr/local/lib/alsa
Hit the escape key to get back to command mode
Type  :wq
If you get in trouble with vim's modes, hit escape a few times, then type :q
to quit.

19.  Check that the file is there and has /usr/local/lib/alsa in it.
less alsa.conf
Type a q to exit less.

20.  Run the ldconfig command to recreate the dynamic library cache in order
to pick up the new libasound we have just configured.
/sbin/ldconfig

21.  From here on you do not have to be the superuser, root.  Change to
your discord directory and recompile.
cd <your directory here>
./mkd

22.  Check that the new library was used in the load module.
ldd discord
It should look like
$ ldd discord
        linux-gate.so.1 =>  (0x00110000)
        libm.so.6 => /lib/libm.so.6 (0x00947000)
        libpthread.so.0 => /lib/libpthread.so.0 (0x0098e000)
        libasound.so.2 => /usr/local/lib/alsa/libasound.so.2 (0x00111000)
        libncurses.so.5 => /lib/libncurses.so.5 (0x03c50000)
        libsndfile.so.1 => /usr/lib/libsndfile.so.1 (0x001d4000)
        libsamplerate.so.0 => /usr/lib/libsamplerate.so.0 (0x00234000)
        libc.so.6 => /lib/libc.so.6 (0x007f1000)
        /lib/ld-linux.so.2 (0x007d2000)
        libdl.so.2 => /lib/libdl.so.2 (0x00972000)
        libtinfo.so.5 => /lib/libtinfo.so.5 (0x03c36000)
 
Make sure that libasound.so.2 points to /usr/local/lib/alsa as above.

That's it, you're done.  Discord will now work properly.  When your package
manager updates your system to the next version of alsa-lib, you can remove
the file alsa.conf in ld.so.conf.d and run /sbin/ldconfig to enable the
package version.  Then recompile and test discord to see if it works with the
new version.  If it does, you can remove the link and library in
/usr/local/lib/alsa and forget about alsa-lib again.  If it doesn't, put the file
alsa.conf back into ld.so.conf.d, rerun /sbin/ldconfig, recompile discord
and you are back to operational status.
