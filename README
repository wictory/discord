discord is a program that allows you to program binaural and
chronaural beats with great flexibility and mixed with sound files of
your choice.  The flexibility requires some complexity.  There is a
learning curve.  Use the test script files as templates and experiment
with changing the variables to see the effects.  There is a help file
in text and html format and a man page.

This was developed on a Fedora Core 6/7 linux system.  It requires
libsndfile and libsamplerate.  Both the library and the development
package that includes the header files have to be installed.  If your
distro does not provide them, go to http://www.mega-nerd.com for the
latest versions.  The library libFLAC must be present for libsndfile
to have FLAC capability.  If it was compiled without the library
present and you try to use FLAC, discord will abort saying unable to
open file.  The beta of libsndfile 1.0.18 provides built in FLAC
support.  If you cannot get FLAC to work you can always use wav and
then convert it to FLAC using sox or audacity.

In additon, there are API issues between libsndfile 1.0.17 and libFLAC
>= 1.1.3.  Succinctly, the libFLAC API changed and the changes are not
reflected in libsndfile.  Discord will still link but there will be no
FLAC available.  On the website are links to a patch I created to make
libsndfile work with newer versions of libFLAC.

discord now uses the standard GNU autotools mechanism to install.

To unpack:
tar -jxvf discord-1.#.#.tar.bz2

Change to the directory discord-1.#.#.

To compile:

./configure

make

su make install

exit

It should be a clean compile.   If there are lots of issues, use the
command autoreconf to rebuild the configure file and try again.

If you install with the default prefix, all of the discord information
will be in directory /usr/local/share/discord.  The binary will be in
/usr/local/bin and the man page in /usr/local/share/man/man1.

A sample configuration file called discordrc is provided for your
$HOME directory.  It allows you to have minimal script files, just the
sequences, if you want, using the options from the configuration file
to play. Copy it to your home directory as .discordrc and tune to your
satisfaction. 

If discord compiles fine but won't run, look at one of the alsa-lib
workaround files included.  The html version is also available on the
discord project web site at sourceforge.net.  The short explanation is
that the alsa-lib version 1.0.14 final does not support floating point
formats.  As doubles are the format that discord uses, discord will
not work with alsa-lib 1.0.14. This should not be an issue now that
alsa-lib 1.0.15 has been released.

If discord has to resample files you need to run it from a directory
where you have write permission.  The resample creates a resampled
file, reads it into memory, and then removes it unless you have 
explicitly asked for it to be kept.  At some point I might convert 
this to use /tmp when the -k/--keep option is not selected or do
the conversion in memory.

There can also be issues with sound servers as they don't allow other
applications to call ALSA directly.  In this case discord will fall
back to the default plugin using its fixed frame rate of 48000 if
possible.  I have had problems with esound and pulseaudio in this
regard.  Try "esdctl off" if you can't get the hardware rate you want
and esound is running.  If it is pulseaudio causing the problem, it
has probably replaced the default device of ALSA.  Remove the
pulseaudio-alsa package or find the file pulseaudio-alsa.conf and move
it to another name.
